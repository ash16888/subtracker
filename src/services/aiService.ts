import type { GenerateInsightsRequest, GenerateInsightsResponse, AIInsight } from '../features/ai-insights/types/insights';
import type { Subscription } from '../types/subscription';
import { supabase } from '../lib/supabase';

export class AIService {
  private static instance: AIService;

  static getInstance(): AIService {
    if (!AIService.instance) {
      AIService.instance = new AIService();
    }
    return AIService.instance;
  }

  async generateInsights(request: GenerateInsightsRequest): Promise<GenerateInsightsResponse> {
    const hasApiKey = import.meta.env.VITE_AI_API_KEY;
    const apiEndpoint = import.meta.env.VITE_AI_API_ENDPOINT;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-—Ä–µ–∂–∏–º, –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ AI API
    if (!hasApiKey || !apiEndpoint) {
      return this.generateDemoInsights(request);
    }

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: { session } } = await supabase.auth.getSession();
      
      if (!session) {
        console.warn('No active session, falling back to demo mode');
        return this.generateDemoInsights(request);
      }

      // –í—ã–∑—ã–≤–∞–µ–º Supabase Edge Function
      const response = await fetch(apiEndpoint, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${session.access_token}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          subscriptions: request.subscriptions,
          userId: session.user.id
        }),
      });

      if (!response.ok) {
        const errorData = await response.text();
        console.error('AI API error:', response.status, errorData);
        throw new Error(`AI API error: ${response.status}`);
      }

      const result = await response.json();
      return result;
    } catch (error) {
      console.error('Error generating insights:', error);
      // Fallback –Ω–∞ –¥–µ–º–æ-—Ä–µ–∂–∏–º –ø—Ä–∏ –æ—à–∏–±–∫–µ
      console.warn('Falling back to demo mode due to error');
      return this.generateDemoInsights(request);
    }
  }

  private generateDemoInsights(request: GenerateInsightsRequest): GenerateInsightsResponse {
    const { subscriptions } = request;

    const totalMonthlySpend = subscriptions.reduce((sum, sub) => {
      const monthlyAmount = sub.billing_period === 'yearly' ? sub.amount / 12 : sub.amount;
      return sum + monthlyAmount;
    }, 0);

    const monthlySubscriptions = subscriptions.filter(s => s.billing_period === 'monthly');
    const categories = [...new Set(subscriptions.map(sub => sub.category).filter(Boolean))] as string[];
    const subscriptionNames = subscriptions.map(sub => sub.name).filter(Boolean);

    // –í—ã—á–∏—Å–ª—è–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é —ç–∫–æ–Ω–æ–º–∏—é
    const potentialSavings = monthlySubscriptions.reduce((sum, sub) => {
      return sum + (sub.amount * 12 * 0.15) / 12; // 15% —Å–∫–∏–¥–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –≥–æ–¥–æ–≤–æ–π –ø–ª–∞–Ω
    }, 0);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤ —Å—Ç–∏–ª–µ –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
    const analysis = this.generatePersonalizedAnalysis(
      subscriptions,
      subscriptionNames,
      categories,
      totalMonthlySpend,
      monthlySubscriptions.length,
      Math.round(potentialSavings)
    );

    const insight: AIInsight = {
      id: `ai-analysis-${Date.now()}`,
      type: 'analysis',
      priority: 'high',
      title: 'üìä –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫',
      description: analysis,
      actionItems: [
        '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–æ–¥–æ–≤—ã–µ —Ç–∞—Ä–∏—Ñ—ã',
        '–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞—É–¥–∏—Ç –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤',
        '–ò–∑—É—á–∏—Ç–µ –Ω–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏'
      ],
      potentialSavings: Math.round(potentialSavings),
      affectedSubscriptions: [],
      createdAt: new Date()
    };

    return {
      insights: [insight],
      generatedAt: new Date()
    };
  }

  private generatePersonalizedAnalysis(
    subscriptions: Subscription[],
    names: string[],
    categories: string[],
    totalMonthly: number,
    monthlyCount: number,
    savings: number
  ): string {
    const hasNetflix = names.some(n => n.toLowerCase().includes('netflix'));
    const hasSpotify = names.some(n => n.toLowerCase().includes('spotify'));
    const hasYouTube = names.some(n => n.toLowerCase().includes('youtube'));
    const hasGaming = categories.includes('–ò–≥—Ä—ã');
    const hasWork = categories.includes('–†–∞–±–æ—Ç–∞');
    
    let analysis = '';

    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
    analysis += `üéØ –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–¥–ø–∏—Å–æ–∫! –í–∏–∂—É, —á—Ç–æ —É –≤–∞—Å —Ä–∞–∑–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã `;
    
    if (hasNetflix && hasSpotify) {
      analysis += `‚Äî –≤—ã —Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è —Å Netflix –∏ –º—É–∑—ã–∫—É —Å–æ Spotify. `;
    } else if (hasYouTube) {
      analysis += `‚Äî YouTube Premium –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –≤—ã –∞–∫—Ç–∏–≤–Ω–æ –ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç–µ –≤–∏–¥–µ–æ–∫–æ–Ω—Ç–µ–Ω—Ç. `;
    }
    
    if (hasGaming) {
      analysis += `–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∏–≥—Ä–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã –≥–æ–≤–æ—Ä—è—Ç –æ —Ç–æ–º, —á—Ç–æ –∏–≥—Ä—ã ‚Äî –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å –≤–∞—à–µ–≥–æ –¥–æ—Å—É–≥–∞. `;
    }
    
    if (hasWork) {
      analysis += `–†–∞–±–æ—á–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤ —Å–ø–∏—Å–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∑–∞–¥–∞—á–∞–º. `;
    }

    analysis += `\n\nüí∞ –°–µ–π—á–∞—Å –≤–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –æ–±—Ö–æ–¥—è—Ç—Å—è –≤ ${Math.round(totalMonthly)} ‚ÇΩ –≤ –º–µ—Å—è—Ü. `;
    
    if (totalMonthly < 2000) {
      analysis += `–≠—Ç–æ –≤–µ—Å—å–º–∞ —Ä–∞–∑—É–º–Ω–∞—è —Å—É–º–º–∞! –í—ã —É–º–µ–µ—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã. `;
    } else if (totalMonthly < 5000) {
      analysis += `–≠—Ç–æ —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–∞—Ç –Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏ ‚Äî –≤–ø–æ–ª–Ω–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. `;
    } else {
      analysis += `–≠—Ç–æ –¥–æ–≤–æ–ª—å–Ω–æ –≤—ã—Å–æ–∫–∞—è —Å—É–º–º–∞, –Ω–æ –µ—Å–ª–∏ –≤—ã –∞–∫—Ç–∏–≤–Ω–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –≤—Å–µ–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ ‚Äî —Ç–æ —ç—Ç–æ –æ–ø—Ä–∞–≤–¥–∞–Ω–æ. `;
    }

    // –û—Å–Ω–æ–≤–Ω–æ–π –∞–Ω–∞–ª–∏–∑ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (monthlyCount > 0) {
      analysis += `\n\nüîÑ –£ –≤–∞—Å ${monthlyCount} –ø–æ–¥–ø–∏—Å–æ–∫ —Å –º–µ—Å—è—á–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π. –•–æ—Ä–æ—à–∞—è –Ω–æ–≤–æ—Å—Ç—å ‚Äî –º–Ω–æ–≥–∏–µ —Å–µ—Ä–≤–∏—Å—ã –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç —Å–∫–∏–¥–∫–∏ –∑–∞ –≥–æ–¥–æ–≤—É—é –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É! `;
      analysis += `–ï—Å–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–æ–¥–æ–≤—ã–µ –ø–ª–∞–Ω—ã, –º–æ–∂–Ω–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –æ–∫–æ–ª–æ ${savings} ‚ÇΩ –≤ –º–µ—Å—è—Ü. `;
      analysis += `–ö–æ–Ω–µ—á–Ω–æ, —Å—Ç–æ–∏—Ç —ç—Ç–æ –¥–µ–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ. `;
    }

    analysis += `\n\nüîç –ó–∞–º–µ—Ç–∏–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:\n`;
    
    if (hasNetflix && hasYouTube) {
      analysis += `‚Ä¢ –£ –≤–∞—Å –µ—Å—Ç—å –∏ Netflix, –∏ YouTube Premium ‚Äî —ç—Ç–æ –æ—Ç–ª–∏—á–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n`;
    }
    
    if (categories.length > 3) {
      analysis += `‚Ä¢ –í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ö–≤–∞—Ç—ã–≤–∞—é—Ç ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π ‚Äî —ç—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤\n`;
    }
    
    if (subscriptions.length > 5) {
      analysis += `‚Ä¢ ${subscriptions.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ ‚Äî –¥–æ–≤–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ, —Å—Ç–æ–∏—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –≤—Å–µ–º–∏ –ª–∏ –≤—ã –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å\n`;
    }

    // –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    analysis += `\n\n‚ú® –í–æ–∑–º–æ–∂–Ω–æ, –≤–∞–º –±—ã–ª–∏ –±—ã –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã:\n`;
    
    if (!hasSpotify && hasYouTube) {
      analysis += `‚Ä¢ **Spotify Premium** ‚Äî –æ—Ç–ª–∏—á–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ YouTube –¥–ª—è –º—É–∑—ã–∫–∏ –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã\n`;
    }
    
    if (hasWork && !names.some(n => n.toLowerCase().includes('notion'))) {
      analysis += `‚Ä¢ **Notion** ‚Äî –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã –∏ –∑–∞–º–µ—Ç–æ–∫\n`;
    }
    
    if (hasGaming && !names.some(n => n.toLowerCase().includes('discord'))) {
      analysis += `‚Ä¢ **Discord Nitro** ‚Äî –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è —Å –¥—Ä—É–∑—å—è–º–∏ –ø–æ –∏–≥—Ä–∞–º\n`;
    }
    
    if (!hasWork && !hasGaming && totalMonthly < 3000) {
      analysis += `‚Ä¢ **Adobe Creative Cloud** ‚Äî –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –¥–∏–∑–∞–π–Ω –∏–ª–∏ —Ñ–æ—Ç–æ\n`;
      analysis += `‚Ä¢ **Skillbox –∏–ª–∏ GeekBrains** ‚Äî –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤\n`;
    }

    analysis += `\nüéØ –í —Ü–µ–ª–æ–º, —É –≤–∞—Å —Ö–æ—Ä–æ—à–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –ø–æ–¥–ø–∏—Å–æ–∫. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏ –æ—Ç–º–µ–Ω—è—Ç—å —Ç–æ, —á–µ–º –Ω–µ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å. –£–¥–∞—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏!`;

    return analysis;
  }
}

export const aiService = AIService.getInstance();